{"title":"Release 1.1","type":"release","content":"<p>May 16, 2025 - Jingsong Lee (<a href=\"mailto:jingsonglee0@gmail.com\" target=\"_blank\" title=\"undefined\" rel=\"noopener\">jingsonglee0@gmail.com</a>)</p>\n<p>Apache Paimon PMC Officially Releases Milestone 1.1 Stable Version (Version 1.1.1).</p>\n<p>This core version has been carefully polished over nearly four months, aggregating the wisdom of over 60 developers from the\nglobal open-source community. In total, it has accumulated over 400 code commits, fully demonstrating the power of community-driven\ntechnological evolution. We sincerely express our gratitude to all contributors!</p>\n<h2 id=\"highlights\">Highlights</h2><ol>\n<li>REST Catalog: Provides a lightweight implementation to access Catalog services, completely decoupling dependency on Hive Metastore. Designed specifically for Paimon&#39;s unique features.</li>\n<li>External File Mode: Enabled via data-file.external-paths, allowing files to exist outside table directories. Unlocks support for super-large tables and partitioned files migration to cold storage.</li>\n<li>Adaptive Bucketing: Configuring bucket = -2 activates Postpone Bucket Mode, designed to address challenges in bucket definition. Empowers backend services to perform intelligent compaction and rescaling.</li>\n<li>File System Ecosystem: Adds support for Tencent Cloud Object Storage, Microsoft Azure Storage, and Huawei OBS file systems.</li>\n<li>Compatibility Notes: When file-index.bitmap.columns is enabled, Bitmap Index V2 is activated by default. Older readers cannot recognize this format; users must upgrade to new readers if using new writers.</li>\n</ol>\n<h2 id=\"rest-catalog\">REST Catalog</h2><p>REST Catalog is ready in this release, benefits of REST Catalog:</p>\n<ol>\n<li>Decoupled Architecture<ul>\n<li>Interacts with Catalog Server via well-defined REST APIs.</li>\n<li>Enables independent evolution and extension of Catalog Server and REST clients.</li>\n</ul>\n</li>\n<li>Language Agnosticism<ul>\n<li>Developers can implement Catalog Server in any programming language as long as REST APIs are followed.</li>\n<li>Leverages existing team expertise and tech stacks.</li>\n</ul>\n</li>\n<li>Vendor Lock-in Avoidance<ul>\n<li>Designed to work with any Catalog Server. </li>\n<li>Reduces migration costs for REST servers, as clients only need to comply with REST protocols.</li>\n</ul>\n</li>\n</ol>\n<img src=\"./img/1.1-rest-api.png\" alt=\"rest\" />\n\n<p>REST API definition (<a href=\"https://paimon.apache.org/docs/master/concepts/rest/rest-api/\" target=\"_blank\" title=\"undefined\" rel=\"noopener\">https://paimon.apache.org/docs/master/concepts/rest/rest-api/</a>):</p>\n<h2 id=\"external-files\">External Files</h2><p>Apache Paimon&#39;s external files were previously stored entirely within the table folder in earlier versions. This allowed the Manifest to record only relative paths for files,\noffering the following advantages:</p>\n<ol>\n<li>Smaller Manifest size</li>\n<li>Easier migration (simply copy files directly)</li>\n</ol>\n<p>However, some requirements necessitate storing files externally, such as managing cold/hot data across multiple file systems. This release introduces the following parameters to address these needs:</p>\n<ol>\n<li>data-file.external-paths: Comma-separated external paths where table data will be written.</li>\n<li>data-file.external-paths.strategy: Strategy for selecting external paths when writing data:<ul>\n<li>none mode: No external storage is selected; data remains in the default warehouse path.</li>\n<li>specific-fs: Choose a specific file system as the external path (e.g., S3, OSS).</li>\n<li>round-robin: Sequentially select paths from data-file.external-paths when writing new files.</li>\n</ul>\n</li>\n</ol>\n<p>If certain data can be cooled, you can use these configurations to copy specific partitions to object storage to reduce costs.</p>\n<h2 id=\"adaptive-bucket-postpone-bucket\">Adaptive Bucket (Postpone Bucket)</h2><p>Bucket configuration has long been a key challenge in Paimon usage, and Compaction management is also complex. The Adaptive Bucket (Postpone Bucket) mode was designed to simplify these complexities.</p>\n<img src=\"./img/1.1-postpone.png\" alt=\"rest\" />\n\n<p>There is a temporary area for storing fresh data, providing backend services with flexible control space. This allows users to avoid worrying about Bucket configuration and Compaction stability.</p>\n<h2 id=\"other-features\">Other Features</h2><ol>\n<li>This version supports in-place upgrade from Iceberg tables to Paimon tables, which is suitable for HDFS-like file systems.</li>\n<li>The &#39;precommit-compact&#39; parameter is now supported for non-keyed tables, significantly reducing small files during streaming writes.</li>\n<li>A new parameter dynamic-bucket.max-buckets has been introduced to prevent excessive Bucket generation in keyed tables when using bucket = -1 mode.</li>\n<li>The default value of sync-all-properties for HiveCatalog tables has been set to True, ensuring all Paimon table options are synchronized to Hive Metastore (HMS) by default.</li>\n</ol>\n<h2 id=\"future-roadmap\">Future Roadmap</h2><ol>\n<li>Develop a Light REST SDK with dependency-free design to avoid introducing Hadoop-related dependencies and reduce usage costs.</li>\n<li>Expand Iceberg Snapshots compatibility to support real-time data integration with Icebergâ€™s Deletion Vectors, currently focusing on top-level files in keyed tables.</li>\n<li>Enable file cloning from Hive, Hudi, and Iceberg tables to Paimon tables.</li>\n</ol>\n","toc":[{"depth":2,"text":"Highlights","id":"highlights"},{"depth":2,"text":"REST Catalog","id":"rest-catalog"},{"depth":2,"text":"External Files","id":"external-files"},{"depth":2,"text":"Adaptive Bucket (Postpone Bucket)","id":"adaptive-bucket-postpone-bucket"},{"depth":2,"text":"Other Features","id":"other-features"},{"depth":2,"text":"Future Roadmap","id":"future-roadmap"}],"alias":"release-1.1","version":"1.1.1","weight":93}