<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Concepts on Apache Paimon</title>
    <link>//paimon.apache.org/docs/1.0/concepts/</link>
    <description>Recent content in Concepts on Apache Paimon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="//paimon.apache.org/docs/1.0/concepts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overview</title>
      <link>//paimon.apache.org/docs/1.0/concepts/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//paimon.apache.org/docs/1.0/concepts/overview/</guid>
      <description>Overview #  Apache Paimon&amp;rsquo;s Architecture:
As shown in the architecture above:
Read/Write: Paimon supports a versatile way to read/write data and perform OLAP queries.
 For reads, it supports consuming data  from historical snapshots (in batch mode), from the latest offset (in streaming mode), or reading incremental snapshots in a hybrid way.   For writes, it supports  streaming synchronization from the changelog of databases (CDC) batch insert/overwrite from offline data.</description>
    </item>
    
    <item>
      <title>Basic Concepts</title>
      <link>//paimon.apache.org/docs/1.0/concepts/basic-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//paimon.apache.org/docs/1.0/concepts/basic-concepts/</guid>
      <description>Basic Concepts #  File Layouts #  All files of a table are stored under one base directory. Paimon files are organized in a layered style. The following image illustrates the file layout. Starting from a snapshot file, Paimon readers can recursively access all records from the table.
Snapshot #  All snapshot files are stored in the snapshot directory.
A snapshot file is a JSON file containing information about this snapshot, including</description>
    </item>
    
    <item>
      <title>Concurrency Control</title>
      <link>//paimon.apache.org/docs/1.0/concepts/concurrency-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//paimon.apache.org/docs/1.0/concepts/concurrency-control/</guid>
      <description>Concurrency Control #  Paimon supports optimistic concurrency for multiple concurrent write jobs.
Each job writes data at its own pace and generates a new snapshot based on the current snapshot by applying incremental files (deleting or adding files) at the time of committing.
There may be two types of commit failures here:
 Snapshot conflict: the snapshot id has been preempted, the table has generated a new snapshot from another job.</description>
    </item>
    
    <item>
      <title>Catalog</title>
      <link>//paimon.apache.org/docs/1.0/concepts/catalog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//paimon.apache.org/docs/1.0/concepts/catalog/</guid>
      <description>Catalog #  Paimon provides a Catalog abstraction to manage the table of contents and metadata. The Catalog abstraction provides a series of ways to help you better integrate with computing engines. We always recommend that you use Catalog to access the Paimon table.
Catalogs #  Paimon catalogs currently support three types of metastores:
 filesystem metastore (default), which stores both metadata and table files in filesystems. hive metastore, which additionally stores metadata in Hive metastore.</description>
    </item>
    
    <item>
      <title>Table Types</title>
      <link>//paimon.apache.org/docs/1.0/concepts/table-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//paimon.apache.org/docs/1.0/concepts/table-types/</guid>
      <description>Table Types #  Paimon supports table types:
 table with pk: Paimon Data Table with Primary key table w/o pk: Paimon Data Table without Primary key view: metastore required, views in SQL are a kind of virtual table format-table: file format table refers to a directory that contains multiple files of the same format, where operations on this table allow for reading or writing to these files, compatible with Hive tables object table: provides metadata indexes for unstructured data objects in the specified Object Storage directory.</description>
    </item>
    
    <item>
      <title>System Tables</title>
      <link>//paimon.apache.org/docs/1.0/concepts/system-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//paimon.apache.org/docs/1.0/concepts/system-tables/</guid>
      <description>System Tables #  Paimon provides a very rich set of system tables to help users better analyze and query the status of Paimon tables:
 Query the status of the data table: Data System Table. Query the global status of the entire Catalog: Global System Table.  Data System Table #  Data System tables contain metadata and information about each Paimon data table, such as the snapshots created and the options in use.</description>
    </item>
    
    <item>
      <title>Data Types</title>
      <link>//paimon.apache.org/docs/1.0/concepts/data-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//paimon.apache.org/docs/1.0/concepts/data-types/</guid>
      <description>Data Types #  A data type describes the logical type of a value in the table ecosystem. It can be used to declare input and/or output types of operations.
All data types supported by Paimon are as follows:
  DataType Description     BOOLEAN Data type of a boolean with a (possibly) three-valued logic of TRUE, FALSE, and UNKNOWN.   CHAR
CHAR(n)  Data type of a fixed-length character string.</description>
    </item>
    
  </channel>
</rss>
